{"version":3,"sources":["logo.svg","Component/user.js","userprofile.js","profile.js","App.js","reportWebVitals.js","Reducer/reducer.js","index.js"],"names":["User","user","Card","className","to","userid","Img","src","picture","medium","Body","Title","name","first","connect","state","userprofile","dispatch","userupdate","val","type","payload","props","useEffect","userdata","profile","Row","map","Col","sm","md","lg","xl","useState","setUsername","users","find","p","match","params","id","console","log","Image","large","fluid","value","onChange","e","target","last","email","contact","joindate","Button","style","marginTop","onClick","toast","classname","Container","exact","path","component","Userprofile","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.239012d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport {Card} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nfunction User({user}) {\n    return (\n        <div>\n            <Card className=\"my-3 p-3 rounded\">\n                <Link to={`/user/${user.user.userid}`}>\n                    <Card.Img src={user.user.picture.medium}/>\n                \n                </Link>\n                <Card.Body>\n                <Link to={`/user/${user.user.userid}`}>\n                    <Card.Title >\n                        <strong>{user.user.name.first}</strong>\n                    </Card.Title>\n                </Link>\n                </Card.Body>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default User\n","import React from 'react'\nimport {Row,Col,Button,Card} from 'react-bootstrap'\nimport User from '../src/Component/user'\nimport userdata from './userdata.json'\nimport {useEffect,useState} from 'react';\nimport {connect} from 'react-redux';\n\nfunction Userprofile(props) {\n    useEffect(()=>{\n        props.userupdate(userdata.profile)\n      },[])\n\n    return (\n        <div>\n            <Row>\n                <h1> User List</h1>\n            {props.userprofile.map((user) =>\n                (\n                   \n\n                     <Col key={user.user.userid} sm={12} md={6} lg={4} xl={3}>\n                     {/* <h3>{user.user.userid}:  {user.user.name.first}</h3>   */}\n                     <User user={user}/> \n                     </Col> \n                        \n                  \n                   \n                )\n            )}\n            </Row>\n        </div>\n    )\n}\nconst mapStateToProps = (state) =>{\n    return {\n      userprofile:state.userprofile\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n      userupdate(val){\n        dispatch({\n          type:'INIT_UPDATE',\n          payload:val,\n        })\n      }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Userprofile);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,Image,ListGroup,Card,Input,Button} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport userdata from './userdata.json'\nimport {useEffect,useState} from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Profile(props) {\n    // const [userdata , setUserData] = useState('')\n    const [username , setUsername] =useState('')\n    \n    useEffect(()=>{\n        props.userupdate(userdata.profile)\n      },[])\n    const users = props.userprofile.find((p) =>p.user.userid == props.match.params.id)\n    const notify = () => toast(\"Profile Updated Sucessfully!\");\n    console.log(users)\n    return (\n        <div>\n            {/* {props.userprofile.map(user =>{\n                return user.user.name.first\n            })} */}\n           <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n           <Row> \n               <Col md={6}>\n                <Card>  \n                    <Image src={users.user.picture.large} fluid/>\n    \n                </Card> \n               </Col>\n               <Col md={3}>\n                 <lable>FirstName:</lable>\n                 <input type='text'  value={users.user.name.first} onChange={e =>setUsername(e.target.value)} />\n                <lable>LastName:</lable>\n                <input type='text' value={users.user.name.last} onChange={e =>setUsername(e.target.value)}/><br/>\n                <lable>Email:</lable><br/>\n                <input type='email' value={users.user.email} onChange={e =>setUsername(e.target.value)}/><br/>\n                <lable>Contact:</lable>\n                <input type='text' value={users.user.contact} onChange={e =>setUsername(e.target.value)}/><br/>\n                <lable>Joined Date:</lable>\n                <input type='datetime' value={users.user.joindate} onChange={e =>setUsername(e.target.value)}/><br/>\n                <Button style={{marginTop:'15px'}} onClick={notify} type='submit'>Submit</Button>\n                <ToastContainer />\n                </Col>\n           </Row>\n        </div>\n    )\n}\nconst mapStateToProps = (state) =>{\n    return {\n      userprofile:state.userprofile\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n      userupdate(val){\n        dispatch({\n          type:'INIT_UPDATE',\n          payload:val,\n        })\n      }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)\n","import logo from './logo.svg';\nimport './App.css';\nimport userdata from './userdata.json'\n// import { Button } from 'react-bootstrap';\nimport { BrowserRouter, Route, Link ,Switch} from \"react-router-dom\";\nimport {useEffect,useState} from 'react';\nimport {connect} from 'react-redux';\nimport Userprofile from './userprofile';\nimport { Container } from 'react-bootstrap';\nimport Profile from './profile';\n\nfunction App(props) {\n\n  useEffect(()=>{\n    props.userupdate(userdata.profile)\n  },[])\n\n\n  \nconsole.log(props.userprofile)\n\n  return (\n    <div>\n      <BrowserRouter>\n      <main classname=\"py-3\">\n      <Container>\n        <Switch>\n          <Route exact path='/' component={Userprofile} />\n          <Route path='/user/:id' component={Profile}/>\n          </Switch>\n      </Container>\n    </main>\n      </BrowserRouter>\n      </div>\n   \n  );\n}\nconst mapStateToProps = (state) =>{\n    return {\n      userprofile:state.userprofile\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n      userupdate(val){\n        dispatch({\n          type:'INIT_UPDATE',\n          payload:val,\n        })\n      }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer=(state={},action)=>{\n    switch (action.type){\n        case 'INIT_UPDATE':{\n            return {\n                userprofile:action.payload\n            }\n        }\n        default : {\n            return state\n        }\n    }\n}\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from '../src/Reducer/reducer'\nimport {Button,Col,Row} from 'react-bootstrap'\n\nconst initialState = {\n  userprofile:[]\n}\nconst store = createStore(reducers,initialState)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}